{
  “@context”: “http://www.w3.org/ns/anno.jsonld”,
  “target”: [
    {
      “id”: “hello_MELD.mei”
    }
  ],
  “type”: “Annotation”,
  "body": [{
    "id": "Hello_MELD.mp3",
    "type": "Sound",
    "format": "audio/mp3"
  }],
  “motivation”: “linking”,
  “created”: “@@@@”,
  “creator”: “@@@@”,
  “@id”: “@@@@”
}


## Steps to add new annotation:

1. [x] Add new annotation type to `annotationSubmitter.render`;  assign value string

2. [x] Add new annotation type in `annotationSubmitter.submitHandler`

3. [-] Add new annotation type logic to `addAnnotations` - add new render option for recording link annotation in `render` method.  NOT NEEDED: uses `this.props.annotationType !== "cueMedia"` branch of render logic, so nothing more to do here.

4. [x] Look at annotation rendering in `AnnotationItem` (invoked by `AnnotationList`)..

    - the motivation for recording annotations needed to be changed in `annotationSubmitter.submitHandler`, as used to select rendered format.

5. [x] In `selectableScoreApp.onReceiveAnnotationContainerContent` code to handle new motivation type.


NOTE: appears to be no selection type for whole piece (e.g. no fragment).

NOTE: duplicated logic between `onRefreshClick` and `onResponse` (refactor for DRY?).

NOTE: new annotation motivation (currently "recording") should be reviewed.

NOTE: there is still a problem that annotations are not saved in the specified container - they all end up in "public/".  LATER: see line 22 in `solidWrapper.js`.  FIXED: need to also set state value in `solidWrapper.js` - fairly obvious, but one I missed first time around.

NOTE: meld-cli-tool needs better handling/reporting of authentication failure.  It seems that access to the Solid directory fails unless there is an explicit ACL set of the new folder.

NOTE: in `annotationItem.js`, about line 600, code does crude attempt at URI resolution.  Better approach would be to use a URL handling library toi do the resolution properly.  @@@find URL resolution library in code - in rdflib?

NOTE: in `selectablScoreApp.js` it's not clear why the motivation switch logic is required - it appears to be setting class values on annotations.  E.g., why isn't this handled in `annotationItem.js`?

NOTE: try testing app against new inrupt Solid pod server at https://signup.pod.inrupt.com/

NOTE: `music-scholars-annotation` code structure seems to entangle a number of different concerns.  A particular thought I had was that each annotation type should be implemented as a separate React element, with all of the associated logic kep in a single module.  Then, at the level of (something like) `annotationbSubmitter.js`/`annotationItem.js`, the appropriate annotation type element would be selected, and avoid the need for further tests.  Maybe use an "annotation object factory" element to encapsulate all the annotation switching logic?



